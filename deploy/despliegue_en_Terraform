az login

$ terraform init
Initializing the backend...
Initializing provider plugins...
- Reusing previous version of hashicorp/azurerm from the dependency lock file
- Using previously-installed hashicorp/azurerm v4.26.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

$ terraform plan -var-file="secrets.tfvars"
data.azurerm_client_config.current: Reading...
data.azurerm_client_config.current: Read complete after 0s [id=xxxxxxxxxx]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.azurerm_storage_account_sas.storagesas will be read during apply
  # (config refers to values not yet known)
 <= data "azurerm_storage_account_sas" "storagesas" {
      + connection_string = (sensitive value)
      + expiry            = "2025-06-08T00:00:00Z"
      + https_only        = true
      + id                = (known after apply)
      + sas               = (sensitive value)
      + start             = "2025-06-04T05:00:00Z"

      + permissions {
          + add     = false
          + create  = false
          + delete  = false
          + filter  = false
          + list    = false
          + process = false
          + read    = true
          + tag     = false
          + update  = false
          + write   = false
        }

      + resource_types {
          + container = true
          + object    = true
          + service   = true
        }

      + services {
          + blob  = true
          + file  = false
          + queue = false
          + table = false
        }
    }

  # azurerm_bastion_host.bastion will be created
  + resource "azurerm_bastion_host" "bastion" {
      + copy_paste_enabled        = true
      + dns_name                  = (known after apply)
      + file_copy_enabled         = false
      + id                        = (known after apply)
      + ip_connect_enabled        = false
      + kerberos_enabled          = false
      + location                  = "eastus"
      + name                      = "bastion-ad-ds"
      + resource_group_name       = "AD-DS-rg"
      + scale_units               = 2
      + session_recording_enabled = false
      + shareable_link_enabled    = false
      + sku                       = "Basic"
      + tunneling_enabled         = false

      + ip_configuration {
          + name                 = "bastion-ip-config"
          + public_ip_address_id = (known after apply)
          + subnet_id            = (known after apply)
        }
    }

  # azurerm_key_vault.keyvault will be created
  + resource "azurerm_key_vault" "keyvault" {
      + access_policy                 = (known after apply)
      + enable_rbac_authorization     = true
      + id                            = (known after apply)
      + location                      = "eastus"
      + name                          = "mykvdsfs64565dfsrhs"
      + public_network_access_enabled = true
      + resource_group_name           = "AD-DS-rg"
      + sku_name                      = "standard"
      + soft_delete_retention_days    = 90
      + tenant_id                     = (sensitive value)
      + vault_uri                     = (known after apply)

      + contact (known after apply)

      + network_acls (known after apply)
    }

  # azurerm_key_vault_secret.sas_token will be created
  + resource "azurerm_key_vault_secret" "sas_token" {
      + id                      = (known after apply)
      + key_vault_id            = (known after apply)
      + name                    = "blob-sas-token"
      + resource_id             = (known after apply)
      + resource_versionless_id = (known after apply)
      + value                   = (sensitive value)
      + value_wo                = (write-only attribute)
      + version                 = (known after apply)
      + versionless_id          = (known after apply)
    }

  # azurerm_network_interface.nic-ad-ds will be created
  + resource "azurerm_network_interface" "nic-ad-ds" {
      + accelerated_networking_enabled = false
      + applied_dns_servers            = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = false
      + location                       = "eastus"
      + mac_address                    = (known after apply)
      + name                           = "nic-ad-ds"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "AD-DS-rg"
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "ipconfig-ad-ds"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_security_group.nsg will be created
  + resource "azurerm_network_security_group" "nsg" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "nsg-ad-ds"
      + resource_group_name = "AD-DS-rg"
      + security_rule       = (known after apply)
    }

  # azurerm_network_security_rule.allow_bastion_rdp will be created
  + resource "azurerm_network_security_rule" "allow_bastion_rdp" {
      + access                      = "Allow"
      + destination_address_prefix  = "VirtualNetwork"
      + destination_port_range      = "3389"
      + direction                   = "Inbound"
      + id                          = (known after apply)
      + name                        = "Allow-Bastion-RDP"
      + network_security_group_name = "nsg-ad-ds"
      + priority                    = 100
      + protocol                    = "Tcp"
      + resource_group_name         = "AD-DS-rg"
      + source_address_prefixes     = [
          + "10.0.2.0/27",
        ]
      + source_port_range           = "*"
    }

  # azurerm_network_security_rule.allow_storage_access will be created
  + resource "azurerm_network_security_rule" "allow_storage_access" {
      + access                      = "Allow"
      + destination_address_prefix  = "Storage"
      + destination_port_range      = "443"
      + direction                   = "Outbound"
      + id                          = (known after apply)
      + name                        = "Allow-Storage-Access"
      + network_security_group_name = "nsg-ad-ds"
      + priority                    = 100
      + protocol                    = "Tcp"
      + resource_group_name         = "AD-DS-rg"
      + source_address_prefix       = "VirtualNetwork"
      + source_port_range           = "*"
    }

  # azurerm_network_security_rule.deny_all_inbound will be created
  + resource "azurerm_network_security_rule" "deny_all_inbound" {
      + access                      = "Deny"
      + destination_address_prefix  = "*"
      + destination_port_range      = "*"
      + direction                   = "Inbound"
      + id                          = (known after apply)
      + name                        = "Deny-All-Inbound"
      + network_security_group_name = "nsg-ad-ds"
      + priority                    = 200
      + protocol                    = "*"
      + resource_group_name         = "AD-DS-rg"
      + source_address_prefix       = "Internet"
      + source_port_range           = "*"
    }

  # azurerm_network_security_rule.deny_all_outbound will be created
  + resource "azurerm_network_security_rule" "deny_all_outbound" {
      + access                      = "Deny"
      + destination_address_prefix  = "*"
      + destination_port_range      = "*"
      + direction                   = "Outbound"
      + id                          = (known after apply)
      + name                        = "Deny-All-Outbound"
      + network_security_group_name = "nsg-ad-ds"
      + priority                    = 200
      + protocol                    = "*"
      + resource_group_name         = "AD-DS-rg"
      + source_address_prefix       = "*"
      + source_port_range           = "*"
    }

  # azurerm_public_ip.bastion_ip will be created
  + resource "azurerm_public_ip" "bastion_ip" {
      + allocation_method       = "Static"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "bastion-public-ip"
      + resource_group_name     = "AD-DS-rg"
      + sku                     = "Standard"
      + sku_tier                = "Regional"
    }

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "AD-DS-rg"
      + tags     = {
          + "environment" = "test"
        }
    }

  # azurerm_role_assignment.kv_secrets_admin will be created
  + resource "azurerm_role_assignment" "kv_secrets_admin" {
      + condition_version                = (known after apply)
      + id                               = (known after apply)
      + name                             = (known after apply)
      + principal_id                     = "ce9a68d9-0033-4701-981a-3f43ee76dab3"
      + principal_type                   = (known after apply)
      + role_definition_id               = (known after apply)
      + role_definition_name             = "Key Vault Administrator"
      + scope                            = (known after apply)
      + skip_service_principal_aad_check = (known after apply)
    }

  # azurerm_role_assignment.kv_secrets_user will be created
  + resource "azurerm_role_assignment" "kv_secrets_user" {
      + condition_version                = (known after apply)
      + id                               = (known after apply)
      + name                             = (known after apply)
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = (known after apply)
      + role_definition_name             = "Key Vault Secrets User"
      + scope                            = (known after apply)
      + skip_service_principal_aad_check = (known after apply)
    }

  # azurerm_storage_account.storage will be created
  + resource "azurerm_storage_account" "storage" {
      + access_tier                        = (known after apply)
      + account_kind                       = "StorageV2"
      + account_replication_type           = "LRS"
      + account_tier                       = "Standard"
      + allow_nested_items_to_be_public    = true
      + cross_tenant_replication_enabled   = false
      + default_to_oauth_authentication    = false
      + dns_endpoint_type                  = "Standard"
      + https_traffic_only_enabled         = true
      + id                                 = (known after apply)
      + infrastructure_encryption_enabled  = false
      + is_hns_enabled                     = false
      + large_file_share_enabled           = (known after apply)
      + local_user_enabled                 = true
      + location                           = "eastus"
      + min_tls_version                    = "TLS1_2"
      + name                               = "mystaccdsfs64565dfsrhs"
      + nfsv3_enabled                      = false
      + primary_access_key                 = (sensitive value)
      + primary_blob_connection_string     = (sensitive value)
      + primary_blob_endpoint              = (known after apply)
      + primary_blob_host                  = (known after apply)
      + primary_blob_internet_endpoint     = (known after apply)
      + primary_blob_internet_host         = (known after apply)
      + primary_blob_microsoft_endpoint    = (known after apply)
      + primary_blob_microsoft_host        = (known after apply)
      + primary_connection_string          = (sensitive value)
      + primary_dfs_endpoint               = (known after apply)
      + primary_dfs_host                   = (known after apply)
      + primary_dfs_internet_endpoint      = (known after apply)
      + primary_dfs_internet_host          = (known after apply)
      + primary_dfs_microsoft_endpoint     = (known after apply)
      + primary_dfs_microsoft_host         = (known after apply)
      + primary_file_endpoint              = (known after apply)
      + primary_file_host                  = (known after apply)
      + primary_file_internet_endpoint     = (known after apply)
      + primary_file_internet_host         = (known after apply)
      + primary_file_microsoft_endpoint    = (known after apply)
      + primary_file_microsoft_host        = (known after apply)
      + primary_location                   = (known after apply)
      + primary_queue_endpoint             = (known after apply)
      + primary_queue_host                 = (known after apply)
      + primary_queue_microsoft_endpoint   = (known after apply)
      + primary_queue_microsoft_host       = (known after apply)
      + primary_table_endpoint             = (known after apply)
      + primary_table_host                 = (known after apply)
      + primary_table_microsoft_endpoint   = (known after apply)
      + primary_table_microsoft_host       = (known after apply)
      + primary_web_endpoint               = (known after apply)
      + primary_web_host                   = (known after apply)
      + primary_web_internet_endpoint      = (known after apply)
      + primary_web_internet_host          = (known after apply)
      + primary_web_microsoft_endpoint     = (known after apply)
      + primary_web_microsoft_host         = (known after apply)
      + public_network_access_enabled      = true
      + queue_encryption_key_type          = "Service"
      + resource_group_name                = "AD-DS-rg"
      + secondary_access_key               = (sensitive value)
      + secondary_blob_connection_string   = (sensitive value)
      + secondary_blob_endpoint            = (known after apply)
      + secondary_blob_host                = (known after apply)
      + secondary_blob_internet_endpoint   = (known after apply)
      + secondary_blob_internet_host       = (known after apply)
      + secondary_blob_microsoft_endpoint  = (known after apply)
      + secondary_blob_microsoft_host      = (known after apply)
      + secondary_connection_string        = (sensitive value)
      + secondary_dfs_endpoint             = (known after apply)
      + secondary_dfs_host                 = (known after apply)
      + secondary_dfs_internet_endpoint    = (known after apply)
      + secondary_dfs_internet_host        = (known after apply)
      + secondary_dfs_microsoft_endpoint   = (known after apply)
      + secondary_dfs_microsoft_host       = (known after apply)
      + secondary_file_endpoint            = (known after apply)
      + secondary_file_host                = (known after apply)
      + secondary_file_internet_endpoint   = (known after apply)
      + secondary_file_internet_host       = (known after apply)
      + secondary_file_microsoft_endpoint  = (known after apply)
      + secondary_file_microsoft_host      = (known after apply)
      + secondary_location                 = (known after apply)
      + secondary_queue_endpoint           = (known after apply)
      + secondary_queue_host               = (known after apply)
      + secondary_queue_microsoft_endpoint = (known after apply)
      + secondary_queue_microsoft_host     = (known after apply)
      + secondary_table_endpoint           = (known after apply)
      + secondary_table_host               = (known after apply)
      + secondary_table_microsoft_endpoint = (known after apply)
      + secondary_table_microsoft_host     = (known after apply)
      + secondary_web_endpoint             = (known after apply)
      + secondary_web_host                 = (known after apply)
      + secondary_web_internet_endpoint    = (known after apply)
      + secondary_web_internet_host        = (known after apply)
      + secondary_web_microsoft_endpoint   = (known after apply)
      + secondary_web_microsoft_host       = (known after apply)
      + sftp_enabled                       = false
      + shared_access_key_enabled          = true
      + table_encryption_key_type          = "Service"

      + blob_properties (known after apply)

      + network_rules (known after apply)

      + queue_properties (known after apply)

      + routing (known after apply)

      + share_properties (known after apply)

      + static_website (known after apply)
    }

  # azurerm_storage_blob.ad_setup_script will be created
  + resource "azurerm_storage_blob" "ad_setup_script" {
      + access_tier            = (known after apply)
      + content_type           = "application/octet-stream"
      + id                     = (known after apply)
      + metadata               = (known after apply)
      + name                   = "ad_setup.ps1"
      + parallelism            = 8
      + size                   = 0
      + source                 = (sensitive value)
      + storage_account_name   = "mystaccdsfs64565dfsrhs"
      + storage_container_name = "scripts"
      + type                   = "Block"
      + url                    = (known after apply)
    }

  # azurerm_storage_blob.post_ad_setup_script will be created
  + resource "azurerm_storage_blob" "post_ad_setup_script" {
      + access_tier            = (known after apply)
      + content_type           = "application/octet-stream"
      + id                     = (known after apply)
      + metadata               = (known after apply)
      + name                   = "post_ad_setup.ps1"
      + parallelism            = 8
      + size                   = 0
      + source                 = (sensitive value)
      + storage_account_name   = "mystaccdsfs64565dfsrhs"
      + storage_container_name = "scripts"
      + type                   = "Block"
      + url                    = (known after apply)
    }

  # azurerm_storage_container.scripts_container will be created
  + resource "azurerm_storage_container" "scripts_container" {
      + container_access_type             = "private"
      + default_encryption_scope          = (known after apply)
      + encryption_scope_override_enabled = true
      + has_immutability_policy           = (known after apply)
      + has_legal_hold                    = (known after apply)
      + id                                = (known after apply)
      + metadata                          = (known after apply)
      + name                              = "scripts"
      + resource_manager_id               = (known after apply)
      + storage_account_id                = (known after apply)
    }

  # azurerm_subnet.bastion_subnet will be created
  + resource "azurerm_subnet" "bastion_subnet" {
      + address_prefixes                              = [
          + "10.0.2.0/27",
        ]
      + default_outbound_access_enabled               = true
      + id                                            = (known after apply)
      + name                                          = "AzureBastionSubnet"
      + private_endpoint_network_policies             = "Disabled"
      + private_link_service_network_policies_enabled = true
      + resource_group_name                           = "AD-DS-rg"
      + virtual_network_name                          = "vnet-ad-ds"
    }

  # azurerm_subnet.subnet will be created
  + resource "azurerm_subnet" "subnet" {
      + address_prefixes                              = [
          + "10.0.1.0/24",
        ]
      + default_outbound_access_enabled               = true
      + id                                            = (known after apply)
      + name                                          = "subnet-ad-ds"
      + private_endpoint_network_policies             = "Disabled"
      + private_link_service_network_policies_enabled = true
      + resource_group_name                           = "AD-DS-rg"
      + virtual_network_name                          = "vnet-ad-ds"
    }

  # azurerm_virtual_machine_extension.run_ad_setup will be created
  + resource "azurerm_virtual_machine_extension" "run_ad_setup" {
      + failure_suppression_enabled = false
      + id                          = (known after apply)
      + name                        = "run-ad-setup"
      + publisher                   = "Microsoft.Compute"
      + settings                    = (sensitive value)
      + type                        = "CustomScriptExtension"
      + type_handler_version        = "1.10"
      + virtual_machine_id          = (known after apply)
    }

  # azurerm_virtual_network.vnet will be created
  + resource "azurerm_virtual_network" "vnet" {
      + address_space                  = [
          + "10.0.0.0/16",
        ]
      + dns_servers                    = (known after apply)
      + guid                           = (known after apply)
      + id                             = (known after apply)
      + location                       = "eastus"
      + name                           = "vnet-ad-ds"
      + private_endpoint_vnet_policies = "Disabled"
      + resource_group_name            = "AD-DS-rg"
      + subnet                         = (known after apply)
    }

  # azurerm_windows_virtual_machine.ad-ds-vm will be created
  + resource "azurerm_windows_virtual_machine" "ad-ds-vm" {
      + admin_password                                         = (sensitive value)
      + admin_username                                         = "adminuser"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disk_controller_type                                   = (known after apply)
      + enable_automatic_updates                               = true
      + extensions_time_budget                                 = "PT1H30M"
      + hotpatching_enabled                                    = false
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "ad-ds-vm"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "AutomaticByOS"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "AD-DS-rg"
      + size                                                   = "Standard_D2S_v3"
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = (known after apply)

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + id                        = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "WindowsServer"
          + publisher = "MicrosoftWindowsServer"
          + sku       = "2019-Datacenter"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

Plan: 22 to add, 0 to change, 0 to destroy.

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── 

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply"    
now.

$ terraform apply -var-file="secrets.tfvars"

data.azurerm_client_config.current: Reading...
data.azurerm_client_config.current: Read complete after 0s [id=xxxxxxxx=]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

# data.azurerm_storage_account_sas.storagesas will be read during apply
# (config refers to values not yet known)
 <= data "azurerm_storage_account_sas" "storagesas" {
      + connection_string = (sensitive value)
      + expiry            = "2025-06-08T00:00:00Z"
      + https_only        = true
      + id                = (known after apply)
      + sas               = (sensitive value)
      + start             = "2025-06-04T05:00:00Z"

      + permissions {
          + add     = false
          + create  = false
          + delete  = false
          + filter  = false
          + list    = false
          + process = false
          + read    = true
          + tag     = false
          + update  = false
          + write   = false
        }

      + resource_types {
          + container = true
          + object    = true
          + service   = true
        }

      + services {
          + blob  = true
          + file  = false
          + queue = false
          + table = false
        }
    }

  # azurerm_bastion_host.bastion will be created
  + resource "azurerm_bastion_host" "bastion" {
      + copy_paste_enabled        = true
      + dns_name                  = (known after apply)
      + file_copy_enabled         = false
      + id                        = (known after apply)
      + ip_connect_enabled        = false
      + kerberos_enabled          = false
      + location                  = "eastus"
      + name                      = "bastion-ad-ds"
      + resource_group_name       = "AD-DS-rg"
      + scale_units               = 2
      + session_recording_enabled = false
      + shareable_link_enabled    = false
      + sku                       = "Basic"
      + tunneling_enabled         = false

      + ip_configuration {
          + name                 = "bastion-ip-config"
          + public_ip_address_id = (known after apply)
          + subnet_id            = (known after apply)
        }
    }

  # azurerm_key_vault.keyvault will be created
  + resource "azurerm_key_vault" "keyvault" {
      + access_policy                 = (known after apply)
      + enable_rbac_authorization     = true
      + id                            = (known after apply)
      + location                      = "eastus"
      + name                          = "mykvdsfs64565dfsrhs"
      + public_network_access_enabled = true
      + resource_group_name           = "AD-DS-rg"
      + sku_name                      = "standard"
      + soft_delete_retention_days    = 90
      + tenant_id                     = (sensitive value)
      + vault_uri                     = (known after apply)

      + contact (known after apply)

      + network_acls (known after apply)
    }

  # azurerm_key_vault_secret.sas_token will be created
  + resource "azurerm_key_vault_secret" "sas_token" {
      + id                      = (known after apply)
      + key_vault_id            = (known after apply)
      + name                    = "blob-sas-token"
      + resource_id             = (known after apply)
      + resource_versionless_id = (known after apply)
      + value                   = (sensitive value)
      + value_wo                = (write-only attribute)
      + version                 = (known after apply)
      + versionless_id          = (known after apply)
    }

  # azurerm_network_interface.nic-ad-ds will be created
  + resource "azurerm_network_interface" "nic-ad-ds" {
      + accelerated_networking_enabled = false
      + applied_dns_servers            = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = false
      + location                       = "eastus"
      + mac_address                    = (known after apply)
      + name                           = "nic-ad-ds"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "AD-DS-rg"
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "ipconfig-ad-ds"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_security_group.nsg will be created
  + resource "azurerm_network_security_group" "nsg" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "nsg-ad-ds"
      + resource_group_name = "AD-DS-rg"
      + security_rule       = (known after apply)
    }

  # azurerm_network_security_rule.allow_bastion_rdp will be created
  + resource "azurerm_network_security_rule" "allow_bastion_rdp" {
      + access                      = "Allow"
      + destination_address_prefix  = "VirtualNetwork"
      + destination_port_range      = "3389"
      + direction                   = "Inbound"
      + id                          = (known after apply)
      + name                        = "Allow-Bastion-RDP"
      + network_security_group_name = "nsg-ad-ds"
      + priority                    = 100
      + protocol                    = "Tcp"
      + resource_group_name         = "AD-DS-rg"
      + source_address_prefixes     = [
          + "10.0.2.0/27",
        ]
      + source_port_range           = "*"
    }

  # azurerm_network_security_rule.allow_storage_access will be created
  + resource "azurerm_network_security_rule" "allow_storage_access" {
      + access                      = "Allow"
      + destination_address_prefix  = "Storage"
      + destination_port_range      = "443"
      + direction                   = "Outbound"
      + id                          = (known after apply)
      + name                        = "Allow-Storage-Access"
      + network_security_group_name = "nsg-ad-ds"
      + priority                    = 100
      + protocol                    = "Tcp"
      + resource_group_name         = "AD-DS-rg"
      + source_address_prefix       = "VirtualNetwork"
      + source_port_range           = "*"
    }

  # azurerm_network_security_rule.deny_all_inbound will be created
  + resource "azurerm_network_security_rule" "deny_all_inbound" {
      + access                      = "Deny"
      + destination_address_prefix  = "*"
      + destination_port_range      = "*"
      + direction                   = "Inbound"
      + id                          = (known after apply)
      + name                        = "Deny-All-Inbound"
      + network_security_group_name = "nsg-ad-ds"
      + priority                    = 200
      + protocol                    = "*"
      + resource_group_name         = "AD-DS-rg"
      + source_address_prefix       = "Internet"
      + source_port_range           = "*"
    }

  # azurerm_network_security_rule.deny_all_outbound will be created
  + resource "azurerm_network_security_rule" "deny_all_outbound" {
      + access                      = "Deny"
      + destination_address_prefix  = "*"
      + destination_port_range      = "*"
      + direction                   = "Outbound"
      + id                          = (known after apply)
      + name                        = "Deny-All-Outbound"
      + network_security_group_name = "nsg-ad-ds"
      + priority                    = 200
      + protocol                    = "*"
      + resource_group_name         = "AD-DS-rg"
      + source_address_prefix       = "*"
      + source_port_range           = "*"
    }

  # azurerm_public_ip.bastion_ip will be created
  + resource "azurerm_public_ip" "bastion_ip" {
      + allocation_method       = "Static"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "bastion-public-ip"
      + resource_group_name     = "AD-DS-rg"
      + sku                     = "Standard"
      + sku_tier                = "Regional"
    }

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "AD-DS-rg"
      + tags     = {
          + "environment" = "test"
        }
    }

  # azurerm_role_assignment.kv_secrets_admin will be created
  + resource "azurerm_role_assignment" "kv_secrets_admin" {
      + condition_version                = (known after apply)
      + id                               = (known after apply)
      + name                             = (known after apply)
      + principal_id                     = "ce9a68d9-0033-4701-981a-3f43ee76dab3"
      + principal_type                   = (known after apply)
      + role_definition_id               = (known after apply)
      + role_definition_name             = "Key Vault Administrator"
      + scope                            = (known after apply)
      + skip_service_principal_aad_check = (known after apply)
    }

  # azurerm_role_assignment.kv_secrets_user will be created
  + resource "azurerm_role_assignment" "kv_secrets_user" {
      + condition_version                = (known after apply)
      + id                               = (known after apply)
      + name                             = (known after apply)
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = (known after apply)
      + role_definition_name             = "Key Vault Secrets User"
      + scope                            = (known after apply)
      + skip_service_principal_aad_check = (known after apply)
    }

  # azurerm_storage_account.storage will be created
  + resource "azurerm_storage_account" "storage" {
      + access_tier                        = (known after apply)
      + account_kind                       = "StorageV2"
      + account_replication_type           = "LRS"
      + account_tier                       = "Standard"
      + allow_nested_items_to_be_public    = true
      + cross_tenant_replication_enabled   = false
      + default_to_oauth_authentication    = false
      + dns_endpoint_type                  = "Standard"
      + https_traffic_only_enabled         = true
      + id                                 = (known after apply)
      + infrastructure_encryption_enabled  = false
      + is_hns_enabled                     = false
      + large_file_share_enabled           = (known after apply)
      + local_user_enabled                 = true
      + location                           = "eastus"
      + min_tls_version                    = "TLS1_2"
      + name                               = "mystaccdsfs64565dfsrhs"
      + nfsv3_enabled                      = false
      + primary_access_key                 = (sensitive value)
      + primary_blob_connection_string     = (sensitive value)
      + primary_blob_endpoint              = (known after apply)
      + primary_blob_host                  = (known after apply)
      + primary_blob_internet_endpoint     = (known after apply)
      + primary_blob_internet_host         = (known after apply)
      + primary_blob_microsoft_endpoint    = (known after apply)
      + primary_blob_microsoft_host        = (known after apply)
      + primary_connection_string          = (sensitive value)
      + primary_dfs_endpoint               = (known after apply)
      + primary_dfs_host                   = (known after apply)
      + primary_dfs_internet_endpoint      = (known after apply)
      + primary_dfs_internet_host          = (known after apply)
      + primary_dfs_microsoft_endpoint     = (known after apply)
      + primary_dfs_microsoft_host         = (known after apply)
      + primary_file_endpoint              = (known after apply)
      + primary_file_host                  = (known after apply)
      + primary_file_internet_endpoint     = (known after apply)
      + primary_file_internet_host         = (known after apply)
      + primary_file_microsoft_endpoint    = (known after apply)
      + primary_file_microsoft_host        = (known after apply)
      + primary_location                   = (known after apply)
      + primary_queue_endpoint             = (known after apply)
      + primary_queue_host                 = (known after apply)
      + primary_queue_microsoft_endpoint   = (known after apply)
      + primary_queue_microsoft_host       = (known after apply)
      + primary_table_endpoint             = (known after apply)
      + primary_table_host                 = (known after apply)
      + primary_table_microsoft_endpoint   = (known after apply)
      + primary_table_microsoft_host       = (known after apply)
      + primary_web_endpoint               = (known after apply)
      + primary_web_host                   = (known after apply)
      + primary_web_internet_endpoint      = (known after apply)
      + primary_web_internet_host          = (known after apply)
      + primary_web_microsoft_endpoint     = (known after apply)
      + primary_web_microsoft_host         = (known after apply)
      + public_network_access_enabled      = false
      + queue_encryption_key_type          = "Service"
      + resource_group_name                = "AD-DS-rg"
      + secondary_access_key               = (sensitive value)
      + secondary_blob_connection_string   = (sensitive value)
      + secondary_blob_endpoint            = (known after apply)
      + secondary_blob_host                = (known after apply)
      + secondary_blob_internet_endpoint   = (known after apply)
      + secondary_blob_internet_host       = (known after apply)
      + secondary_blob_microsoft_endpoint  = (known after apply)
      + secondary_blob_microsoft_host      = (known after apply)
      + secondary_connection_string        = (sensitive value)
      + secondary_dfs_endpoint             = (known after apply)
      + secondary_dfs_host                 = (known after apply)
      + secondary_dfs_internet_endpoint    = (known after apply)
      + secondary_dfs_internet_host        = (known after apply)
      + secondary_dfs_microsoft_endpoint   = (known after apply)
      + secondary_dfs_microsoft_host       = (known after apply)
      + secondary_file_endpoint            = (known after apply)
      + secondary_file_host                = (known after apply)
      + secondary_file_internet_endpoint   = (known after apply)
      + secondary_file_internet_host       = (known after apply)
      + secondary_file_microsoft_endpoint  = (known after apply)
      + secondary_file_microsoft_host      = (known after apply)
      + secondary_location                 = (known after apply)
      + secondary_queue_endpoint           = (known after apply)
      + secondary_queue_host               = (known after apply)
      + secondary_queue_microsoft_endpoint = (known after apply)
      + secondary_queue_microsoft_host     = (known after apply)
      + secondary_table_endpoint           = (known after apply)
      + secondary_table_host               = (known after apply)
      + secondary_table_microsoft_endpoint = (known after apply)
      + secondary_table_microsoft_host     = (known after apply)
      + secondary_web_endpoint             = (known after apply)
      + secondary_web_host                 = (known after apply)
      + secondary_web_internet_endpoint    = (known after apply)
      + secondary_web_internet_host        = (known after apply)
      + secondary_web_microsoft_endpoint   = (known after apply)
      + secondary_web_microsoft_host       = (known after apply)
      + sftp_enabled                       = false
      + shared_access_key_enabled          = true
      + table_encryption_key_type          = "Service"

      + blob_properties (known after apply)

      + network_rules (known after apply)

      + queue_properties (known after apply)

      + routing (known after apply)

      + share_properties (known after apply)

      + static_website (known after apply)
    }

  # azurerm_storage_blob.ad_setup_script will be created
  + resource "azurerm_storage_blob" "ad_setup_script" {
      + access_tier            = (known after apply)
      + content_type           = "application/octet-stream"
      + id                     = (known after apply)
      + metadata               = (known after apply)
      + name                   = "ad_setup.ps1"
      + parallelism            = 8
      + size                   = 0
      + source                 = (sensitive value)
      + storage_account_name   = "mystaccdsfs64565dfsrhs"
      + storage_container_name = "scripts"
      + type                   = "Block"
      + url                    = (known after apply)
    }

  # azurerm_storage_blob.post_ad_setup_script will be created
  + resource "azurerm_storage_blob" "post_ad_setup_script" {
      + access_tier            = (known after apply)
      + content_type           = "application/octet-stream"
      + id                     = (known after apply)
      + metadata               = (known after apply)
      + name                   = "post_ad_setup.ps1"
      + parallelism            = 8
      + size                   = 0
      + source                 = (sensitive value)
      + storage_account_name   = "mystaccdsfs64565dfsrhs"
      + storage_container_name = "scripts"
      + type                   = "Block"
      + url                    = (known after apply)
    }

  # azurerm_storage_container.scripts_container will be created
  + resource "azurerm_storage_container" "scripts_container" {
      + container_access_type             = "private"
      + default_encryption_scope          = (known after apply)
      + encryption_scope_override_enabled = true
      + has_immutability_policy           = (known after apply)
      + has_legal_hold                    = (known after apply)
      + id                                = (known after apply)
      + metadata                          = (known after apply)
      + name                              = "scripts"
      + resource_manager_id               = (known after apply)
      + storage_account_id                = (known after apply)
    }

  # azurerm_subnet.bastion_subnet will be created
  + resource "azurerm_subnet" "bastion_subnet" {
      + address_prefixes                              = [
          + "10.0.2.0/27",
        ]
      + default_outbound_access_enabled               = true
      + id                                            = (known after apply)
      + name                                          = "AzureBastionSubnet"
      + private_endpoint_network_policies             = "Disabled"
      + private_link_service_network_policies_enabled = true
      + resource_group_name                           = "AD-DS-rg"
      + virtual_network_name                          = "vnet-ad-ds"
    }

  # azurerm_subnet.subnet will be created
  + resource "azurerm_subnet" "subnet" {
      + address_prefixes                              = [
          + "10.0.1.0/24",
        ]
      + default_outbound_access_enabled               = true
      + id                                            = (known after apply)
      + name                                          = "subnet-ad-ds"
      + private_endpoint_network_policies             = "Disabled"
      + private_link_service_network_policies_enabled = true
      + resource_group_name                           = "AD-DS-rg"
      + virtual_network_name                          = "vnet-ad-ds"
    }

  # azurerm_virtual_machine_extension.run_ad_setup will be created
  + resource "azurerm_virtual_machine_extension" "run_ad_setup" {
      + failure_suppression_enabled = false
      + id                          = (known after apply)
      + name                        = "run-ad-setup"
      + publisher                   = "Microsoft.Compute"
      + settings                    = (sensitive value)
      + type                        = "CustomScriptExtension"
      + type_handler_version        = "1.10"
      + virtual_machine_id          = (known after apply)
    }

  # azurerm_virtual_network.vnet will be created
  + resource "azurerm_virtual_network" "vnet" {
      + address_space                  = [
          + "10.0.0.0/16",
        ]
      + dns_servers                    = (known after apply)
      + guid                           = (known after apply)
      + id                             = (known after apply)
      + location                       = "eastus"
      + name                           = "vnet-ad-ds"
      + private_endpoint_vnet_policies = "Disabled"
      + resource_group_name            = "AD-DS-rg"
      + subnet                         = (known after apply)
    }

  # azurerm_windows_virtual_machine.ad-ds-vm will be created
  + resource "azurerm_windows_virtual_machine" "ad-ds-vm" {
      + admin_password                                         = (sensitive value)
      + admin_username                                         = "adminuser"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disk_controller_type                                   = (known after apply)
      + enable_automatic_updates                               = true
      + extensions_time_budget                                 = "PT1H30M"
      + hotpatching_enabled                                    = false
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "ad-ds-vm"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "AutomaticByOS"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "AD-DS-rg"
      + size                                                   = "Standard_D2S_v3"
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = (known after apply)

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + id                        = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "WindowsServer"
          + publisher = "MicrosoftWindowsServer"
          + sku       = "2019-Datacenter"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

Plan: 22 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

azurerm_resource_group.rg: Creating...
azurerm_resource_group.rg: Still creating... [10s elapsed]
azurerm_resource_group.rg: Creation complete after 13s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg]
azurerm_network_security_group.nsg: Creating...
azurerm_virtual_network.vnet: Creating...
azurerm_key_vault.keyvault: Creating...
azurerm_public_ip.bastion_ip: Creating...
azurerm_storage_account.storage: Creating...
azurerm_public_ip.bastion_ip: Creation complete after 4s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Network/publicIPAddresses/bastion-public-ip]
azurerm_network_security_group.nsg: Creation complete after 4s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-ad-ds]
azurerm_network_security_rule.allow_bastion_rdp: Creating...
azurerm_network_security_rule.deny_all_outbound: Creating...
azurerm_network_security_rule.deny_all_inbound: Creating...
azurerm_network_security_rule.allow_storage_access: Creating...
azurerm_virtual_network.vnet: Creation complete after 6s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Network/virtualNetworks/vnet-ad-ds]
azurerm_subnet.subnet: Creating...
azurerm_subnet.bastion_subnet: Creating...
azurerm_network_security_rule.allow_bastion_rdp: Creation complete after 2s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-ad-ds/securityRules/Allow-Bastion-RDP]
azurerm_network_security_rule.allow_storage_access: Creation complete after 2s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-ad-ds/securityRules/Allow-Storage-Access]
azurerm_network_security_rule.deny_all_inbound: Creation complete after 3s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-ad-ds/securityRules/Deny-All-Inbound]
azurerm_network_security_rule.deny_all_outbound: Creation complete after 3s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Network/networkSecurityGroups/nsg-ad-ds/securityRules/Deny-All-Outbound]
azurerm_key_vault.keyvault: Still creating... [10s elapsed]
azurerm_storage_account.storage: Still creating... [10s elapsed]
azurerm_subnet.subnet: Creation complete after 5s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Network/virtualNetworks/vnet-ad-ds/subnets/subnet-ad-ds]
azurerm_network_interface.nic-ad-ds: Creating...
azurerm_subnet.bastion_subnet: Creation complete after 9s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Network/virtualNetworks/vnet-ad-ds/subnets/AzureBastionSubnet]
azurerm_bastion_host.bastion: Creating...
azurerm_key_vault.keyvault: Still creating... [20s elapsed]
azurerm_storage_account.storage: Still creating... [20s elapsed]
azurerm_network_interface.nic-ad-ds: Still creating... [10s elapsed]
azurerm_bastion_host.bastion: Still creating... [10s elapsed]
azurerm_network_interface.nic-ad-ds: Creation complete after 16s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Network/networkInterfaces/nic-ad-ds]
azurerm_windows_virtual_machine.ad-ds-vm: Creating...
azurerm_key_vault.keyvault: Still creating... [30s elapsed]
azurerm_storage_account.storage: Still creating... [30s elapsed]
azurerm_bastion_host.bastion: Still creating... [20s elapsed]
azurerm_windows_virtual_machine.ad-ds-vm: Still creating... [10s elapsed]
azurerm_key_vault.keyvault: Still creating... [40s elapsed]
azurerm_storage_account.storage: Still creating... [40s elapsed]
azurerm_bastion_host.bastion: Still creating... [30s elapsed]
azurerm_windows_virtual_machine.ad-ds-vm: Still creating... [20s elapsed]
azurerm_key_vault.keyvault: Still creating... [50s elapsed]
azurerm_storage_account.storage: Still creating... [50s elapsed]
azurerm_windows_virtual_machine.ad-ds-vm: Creation complete after 28s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Compute/virtualMachines/ad-ds-vm]
azurerm_bastion_host.bastion: Still creating... [40s elapsed]
azurerm_key_vault.keyvault: Still creating... [1m0s elapsed]
azurerm_storage_account.storage: Still creating... [1m0s elapsed]
azurerm_bastion_host.bastion: Still creating... [50s elapsed]
azurerm_storage_account.storage: Creation complete after 1m6s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Storage/storageAccounts/mystaccdsfs64565dfsrhs]
data.azurerm_storage_account_sas.storagesas: Reading...
azurerm_storage_container.scripts_container: Creating...
data.azurerm_storage_account_sas.storagesas: Read complete after 0s [id=86b6daacd5ed62e6dfbd3ae7a544ed2347643335f90b4e0fe22abd683f205c4f]
azurerm_storage_container.scripts_container: Creation complete after 2s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Storage/storageAccounts/mystaccdsfs64565dfsrhs/blobServices/default/containers/scripts]
azurerm_virtual_machine_extension.run_ad_setup: Creating...
azurerm_storage_blob.post_ad_setup_script: Creating...
azurerm_storage_blob.ad_setup_script: Creating...
azurerm_storage_blob.post_ad_setup_script: Creation complete after 1s [id=https://mystaccdsfs64565dfsrhs.blob.core.windows.net/scripts/post_ad_setup.ps1]
azurerm_storage_blob.ad_setup_script: Creation complete after 2s [id=https://mystaccdsfs64565dfsrhs.blob.core.windows.net/scripts/ad_setup.ps1]
azurerm_key_vault.keyvault: Still creating... [1m10s elapsed]
azurerm_bastion_host.bastion: Still creating... [1m0s elapsed]
azurerm_virtual_machine_extension.run_ad_setup: Still creating... [10s elapsed]
azurerm_key_vault.keyvault: Still creating... [1m20s elapsed]
azurerm_bastion_host.bastion: Still creating... [1m10s elapsed]
azurerm_virtual_machine_extension.run_ad_setup: Still creating... [20s elapsed]
azurerm_key_vault.keyvault: Still creating... [1m30s elapsed]
azurerm_bastion_host.bastion: Still creating... [1m20s elapsed]
azurerm_virtual_machine_extension.run_ad_setup: Still creating... [30s elapsed]
azurerm_key_vault.keyvault: Still creating... [1m40s elapsed]
azurerm_bastion_host.bastion: Still creating... [1m30s elapsed]
azurerm_virtual_machine_extension.run_ad_setup: Still creating... [40s elapsed]
azurerm_key_vault.keyvault: Still creating... [1m50s elapsed]
azurerm_bastion_host.bastion: Still creating... [1m40s elapsed]
azurerm_virtual_machine_extension.run_ad_setup: Still creating... [50s elapsed]
azurerm_key_vault.keyvault: Still creating... [2m0s elapsed]
azurerm_bastion_host.bastion: Still creating... [1m50s elapsed]
azurerm_virtual_machine_extension.run_ad_setup: Still creating... [1m0s elapsed]
azurerm_key_vault.keyvault: Still creating... [2m10s elapsed]
azurerm_bastion_host.bastion: Still creating... [2m0s elapsed]
azurerm_virtual_machine_extension.run_ad_setup: Still creating... [1m10s elapsed]
azurerm_key_vault.keyvault: Still creating... [2m20s elapsed]
azurerm_bastion_host.bastion: Still creating... [2m10s elapsed]
azurerm_virtual_machine_extension.run_ad_setup: Still creating... [1m20s elapsed]
azurerm_key_vault.keyvault: Still creating... [2m30s elapsed]
azurerm_bastion_host.bastion: Still creating... [2m20s elapsed]
azurerm_virtual_machine_extension.run_ad_setup: Still creating... [1m30s elapsed]
azurerm_key_vault.keyvault: Still creating... [2m40s elapsed]
azurerm_key_vault.keyvault: Creation complete after 2m44s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.KeyVault/vaults/mykvdsfs64565dfsrhs]
azurerm_role_assignment.kv_secrets_admin: Creating...
azurerm_role_assignment.kv_secrets_user: Creating...
azurerm_bastion_host.bastion: Still creating... [2m30s elapsed]
azurerm_virtual_machine_extension.run_ad_setup: Still creating... [1m40s elapsed]
azurerm_role_assignment.kv_secrets_admin: Still creating... [10s elapsed]
azurerm_role_assignment.kv_secrets_user: Still creating... [10s elapsed]
azurerm_bastion_host.bastion: Still creating... [2m40s elapsed]
azurerm_virtual_machine_extension.run_ad_setup: Still creating... [1m50s elapsed]
azurerm_role_assignment.kv_secrets_admin: Still creating... [20s elapsed]
azurerm_role_assignment.kv_secrets_user: Still creating... [20s elapsed]
azurerm_bastion_host.bastion: Still creating... [2m50s elapsed]
azurerm_virtual_machine_extension.run_ad_setup: Still creating... [2m0s elapsed]
azurerm_role_assignment.kv_secrets_user: Creation complete after 29s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.KeyVault/vaults/mykvdsfs64565dfsrhs/providers/Microsoft.Authorization/roleAssignments/eba5684c-b217-3176-6b19-9beb5b833c38]  
azurerm_role_assignment.kv_secrets_admin: Creation complete after 29s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.KeyVault/vaults/mykvdsfs64565dfsrhs/providers/Microsoft.Authorization/roleAssignments/fcdb8612-7445-5d1a-864a-06f7ad0c3616] 
azurerm_key_vault_secret.sas_token: Creating...
azurerm_key_vault_secret.sas_token: Creation complete after 1s [id=https://mykvdsfs64565dfsrhs.vault.azure.net/secrets/blob-sas-token/335fe42d19894ed99d897e875038c802]
azurerm_virtual_machine_extension.run_ad_setup: Creation complete after 6m21s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Compute/virtualMachines/ad-ds-vm/extensions/run-ad-setup]
azurerm_bastion_host.bastion: Creation complete after 9m46s [id=/subscriptions/c692d12d-f39e-4666-968b-f899927b8c7e/resourceGroups/AD-DS-rg/providers/Microsoft.Network/bastionHosts/bastion-ad-ds]

Apply complete! Resources: 22 added, 0 changed, 0 destroyed.
